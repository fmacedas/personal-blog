<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Advanced on Fernando's Blog</title><link>https://hugo-toha.github.io/notes/01-csharp/02-advanced/</link><description>Recent content in Advanced on Fernando's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://hugo-toha.github.io/notes/01-csharp/02-advanced/index.xml" rel="self" type="application/rss+xml"/><item><title>Data Type Conversion</title><link>https://hugo-toha.github.io/notes/01-csharp/02-advanced/01-convert-data-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/02-advanced/01-convert-data-types/</guid><description>&lt;!-- Casting type to convert -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Casting&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>Casting truncates the value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> myDecimal = &lt;span style="color:#ae81ff">3.14&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;decimal: {myDecimal}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// decimal: 3.14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> myInt = (&lt;span style="color:#66d9ef">int&lt;/span>)myDecimal;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;int: {myInt}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// int: 3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert number to string -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>To String&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> first = &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> second = &lt;span style="color:#ae81ff">7&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> message = first.ToString() + second.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#75715e">// 57&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert string to number using Parse() -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Parse&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> first = &lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> second = &lt;span style="color:#e6db74">&amp;#34;7&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> sum = &lt;span style="color:#66d9ef">int&lt;/span>.Parse(first) + &lt;span style="color:#66d9ef">int&lt;/span>.Parse(second);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(sum); &lt;span style="color:#75715e">// 12&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert string to number using TryParse() -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Parse&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">value&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;102&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> result = &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>.TryParse(&lt;span style="color:#66d9ef">value&lt;/span>, &lt;span style="color:#66d9ef">out&lt;/span> result))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Measurement: {result}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Unable to report the measurement.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert string to number using Convert class -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Convert&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>Convert rounds the value.&lt;/p></description></item><item><title>Methods on Arrays</title><link>https://hugo-toha.github.io/notes/01-csharp/02-advanced/02-methods-on-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/02-advanced/02-methods-on-arrays/</guid><description>&lt;!-- Sorting an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Sort&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [ &lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Sorted...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Sort(pallets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// A11, A13, B12, B14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Reverse an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Reverse&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [ &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Reversed...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Reverse(pallets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// B14, B12, A13, A11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Clear an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Clear&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [ &lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Clear(pallets, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Clearing 2 ... count: {pallets.Length}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// null, null, B12, A13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Resize an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Resize&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [&lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Resize(&lt;span style="color:#66d9ef">ref&lt;/span> pallets, &lt;span style="color:#ae81ff">6&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Resizing 6 ... count: {pallets.Length}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pallets[&lt;span style="color:#ae81ff">4&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;C01&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pallets[&lt;span style="color:#ae81ff">5&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;C02&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// B14, A11, B12, A13, C01, C02&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Join an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Join&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span>[] valueArray = [&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;b&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;c&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Reverse(valueArray);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// string result = new string(valueArray);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> result = String.Join(&lt;span style="color:#e6db74">&amp;#34;|&amp;#34;&lt;/span>, valueArray); &lt;span style="color:#75715e">// a|b|c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(result);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Split an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Split&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> result = &lt;span style="color:#e6db74">&amp;#34;123|456|789&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] items = result.Split(&lt;span style="color:#e6db74">&amp;#39;|&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">string&lt;/span> item &lt;span style="color:#66d9ef">in&lt;/span> items)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(item); &lt;span style="color:#75715e">// 123, 456, 789&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Data Formatting</title><link>https://hugo-toha.github.io/notes/01-csharp/02-advanced/03-data-formatting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/02-advanced/03-data-formatting/</guid><description>&lt;!-- Composite Formatting -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Composite Formatting&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> first = &lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> second = &lt;span style="color:#e6db74">&amp;#34;World&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> result = &lt;span style="color:#66d9ef">string&lt;/span>.Format(&lt;span style="color:#e6db74">&amp;#34;{0} {1}!&amp;#34;&lt;/span>, first, second);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(result); &lt;span style="color:#75715e">// Hello World!&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Formatting Currency -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Formatting Currency&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> price = &lt;span style="color:#ae81ff">123.45&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> discount = &lt;span style="color:#ae81ff">50&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Price: {price:C} (Save {discount:C})&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Price: $123.45 (Save $50.00)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Formatting Numbers -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Formatting Numbers&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> measurement = &lt;span style="color:#ae81ff">123456.78912&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Measurement: {measurement:N} units&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Measurement: 123,456.79 units&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Measurement: {measurement:N4} units&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Measurement: 123,456.7891 units&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Formatting Percentage -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Formatting Numbers&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> tax = .&lt;span style="color:#ae81ff">36785&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Tax rate: {tax:P2}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Tax rate: 36.79%&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>