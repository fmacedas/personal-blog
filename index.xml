<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fernando's Blog</title><link>https://hugo-toha.github.io/</link><description>Recent content on Fernando's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 08 Jun 2020 08:06:25 +0600</lastBuildDate><atom:link href="https://hugo-toha.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://hugo-toha.github.io/posts/introduction/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/introduction/</guid><description>&lt;p>Greeting! This is an introduction post. This post tests the followings:&lt;/p>
&lt;ul>
&lt;li>Hero image is in the same directory as the post.&lt;/li>
&lt;li>This post should be at top of the sidebar.&lt;/li>
&lt;li>Post author should be the same as specified in &lt;code>author.yaml&lt;/code> file.&lt;/li>
&lt;/ul></description></item><item><title>Markdown Samples</title><link>https://hugo-toha.github.io/posts/markdown-sample/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/markdown-sample/</guid><description>&lt;p>This is a sample post intended to test the followings:&lt;/p>
&lt;ul>
&lt;li>A different post author.&lt;/li>
&lt;li>Table of contents.&lt;/li>
&lt;li>Markdown content rendering.&lt;/li>
&lt;li>Math rendering.&lt;/li>
&lt;li>Emoji rendering.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="markdown-syntax-rendering">Markdown Syntax Rendering&lt;/h1>
&lt;h2 id="headings">Headings&lt;/h2>
&lt;p>The following HTML &lt;code>&amp;lt;h1&amp;gt;&lt;/code>—&lt;code>&amp;lt;h6&amp;gt;&lt;/code> elements represent six levels of section headings. &lt;code>&amp;lt;h1&amp;gt;&lt;/code> is the highest section level while &lt;code>&amp;lt;h6&amp;gt;&lt;/code> is the lowest.&lt;/p>
&lt;h1 id="h1">H1&lt;/h1>
&lt;h2 id="h2">H2&lt;/h2>
&lt;h3 id="h3">H3&lt;/h3>
&lt;h4 id="h4">H4&lt;/h4>
&lt;h5 id="h5">H5&lt;/h5>
&lt;h6 id="h6">H6&lt;/h6>
&lt;h2 id="paragraph">Paragraph&lt;/h2>
&lt;p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.&lt;/p></description></item><item><title>Rich Content</title><link>https://hugo-toha.github.io/posts/category/sub-category/rich-content/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/category/sub-category/rich-content/</guid><description>&lt;p>This sample post tests the followings:&lt;/p>
&lt;ul>
&lt;li>Category, sub-category nesting in the sidebar.&lt;/li>
&lt;li>Hero image and other images are in &lt;code>images&lt;/code> folder inside this post directory.&lt;/li>
&lt;li>Different media rendering like image, tweet, YouTube video, Vimeo video etc.&lt;/li>
&lt;/ul>
&lt;h3 id="image-sample">Image Sample&lt;/h3>
&lt;img src="https://hugo-toha.github.io/posts/category/sub-category/rich-content/images/forest.jpg"
alt="Forest"
class="center"
>
&lt;div style="margin-top: rem;">&lt;/div>
&lt;h3 id="tweet-sample">Tweet Sample&lt;/h3>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Owl bet you&amp;#39;ll lose this staring contest 🦉 &lt;a href="https://t.co/eJh4f2zncC">pic.twitter.com/eJh4f2zncC&lt;/a>&lt;/p>&amp;mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) &lt;a href="https://twitter.com/sandiegozoo/status/1453110110599868418?ref_src=twsrc%5Etfw">October 26, 2021&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;div style="margin-top: rem;">&lt;/div>
&lt;h3 id="youtube-video-sample">YouTube Video Sample&lt;/h3>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ZJthWmvUzzc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;div style="margin-top: rem;">&lt;/div>
&lt;h3 id="vimeo-video-sample">Vimeo Video Sample&lt;/h3>
&lt;div
style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe
src="https://player.vimeo.com/video/48912912?dnt=0"
style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allow="fullscreen">
&lt;/iframe>
&lt;/div></description></item><item><title>Shortcodes Samples</title><link>https://hugo-toha.github.io/posts/shortcodes/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/shortcodes/</guid><description>&lt;p>This is a sample post intended to test the followings:&lt;/p>
&lt;ul>
&lt;li>Default hero image.&lt;/li>
&lt;li>Different shortcodes.&lt;/li>
&lt;/ul>
&lt;h2 id="alert">Alert&lt;/h2>
&lt;p>The following alerts are available in this theme.&lt;/p>
&lt;div class="alert success">
&lt;span>&lt;i data-feather="check-circle">&lt;/i>&lt;/span>
&lt;span>&lt;strong>This is sample alert with &lt;code>type=&amp;quot;success&amp;quot;&lt;/code>.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div class="alert danger">
&lt;span>&lt;i data-feather="alert-octagon">&lt;/i>&lt;/span>
&lt;span>&lt;strong>This is sample alert with &lt;code>type=&amp;quot;danger&amp;quot;&lt;/code>.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div class="alert warning">
&lt;span>&lt;i data-feather="alert-triangle">&lt;/i>&lt;/span>
&lt;span>&lt;strong>This is sample alert with &lt;code>type=&amp;quot;warning&amp;quot;&lt;/code>.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div class="alert info">
&lt;span>&lt;i data-feather="info">&lt;/i>&lt;/span>
&lt;span>&lt;strong>This is sample alert with &lt;code>type=&amp;quot;info&amp;quot;&lt;/code>.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div class="alert dark">
&lt;span>&lt;i data-feather="alert-circle">&lt;/i>&lt;/span>
&lt;span>&lt;strong>This is sample alert with &lt;code>type=&amp;quot;dark&amp;quot;&lt;/code>.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div class="alert primary">
&lt;span>&lt;i data-feather="alert-circle">&lt;/i>&lt;/span>
&lt;span>&lt;strong>This is sample alert with &lt;code>type=&amp;quot;primary&amp;quot;&lt;/code>.&lt;/strong>&lt;/span>
&lt;/div>
&lt;div class="alert secondary">
&lt;span>&lt;i data-feather="alert-circle">&lt;/i>&lt;/span>
&lt;span>&lt;strong>This is sample alert with &lt;code>type=&amp;quot;secondary&amp;quot;&lt;/code>.&lt;/strong>&lt;/span>
&lt;/div>
&lt;h2 id="image">Image&lt;/h2>
&lt;h4 id="a-sample-image-without-any-attribute">A sample image without any attribute.&lt;/h4>
&lt;img src="https://hugo-toha.github.io/posts/shortcodes/boat.jpg"
alt="A boat at the sea"
>
&lt;div style="margin-top: 3rem;">&lt;/div>
&lt;h4 id="a-sample-image-with-height-and-width-attributes">A sample image with &lt;code>height&lt;/code> and &lt;code>width&lt;/code> attributes.&lt;/h4>
&lt;img src="https://hugo-toha.github.io/posts/shortcodes/boat.jpg"
alt="A boat at the sea"
width="600"
height="400"
>
&lt;div style="margin-top: 3rem;">&lt;/div>
&lt;h4 id="a-center-aligned-image-with-height-and-width-attributes">A center aligned image with &lt;code>height&lt;/code> and &lt;code>width&lt;/code> attributes.&lt;/h4>
&lt;img src="https://hugo-toha.github.io/posts/shortcodes/boat.jpg"
alt="A boat at the sea"
width="600"
height="400"
class="center"
>
&lt;div style="margin-top: 3rem;">&lt;/div>
&lt;h4 id="a-image-with-float-attribute">A image with &lt;code>float&lt;/code> attribute.&lt;/h4>
&lt;img src="https://hugo-toha.github.io/posts/shortcodes/boat.jpg"
alt="A boat at the sea"
width="500"
height="200"
style="float: right;"
>
&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.&lt;/p></description></item><item><title>Data Type Conversion</title><link>https://hugo-toha.github.io/notes/01-csharp/02-advanced/01-convert-data-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/02-advanced/01-convert-data-types/</guid><description>&lt;!-- Casting type to convert -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Casting&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>Casting truncates the value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> myDecimal = &lt;span style="color:#ae81ff">3.14&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;decimal: {myDecimal}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// decimal: 3.14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> myInt = (&lt;span style="color:#66d9ef">int&lt;/span>)myDecimal;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;int: {myInt}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// int: 3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert number to string -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>To String&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> first = &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> second = &lt;span style="color:#ae81ff">7&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> message = first.ToString() + second.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#75715e">// 57&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert string to number using Parse() -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Parse&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> first = &lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> second = &lt;span style="color:#e6db74">&amp;#34;7&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> sum = &lt;span style="color:#66d9ef">int&lt;/span>.Parse(first) + &lt;span style="color:#66d9ef">int&lt;/span>.Parse(second);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(sum); &lt;span style="color:#75715e">// 12&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert string to number using TryParse() -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Parse&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">value&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;102&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> result = &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>.TryParse(&lt;span style="color:#66d9ef">value&lt;/span>, &lt;span style="color:#66d9ef">out&lt;/span> result))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Measurement: {result}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Unable to report the measurement.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Convert string to number using Convert class -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Convert&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>Convert rounds the value.&lt;/p></description></item><item><title>Introduction</title><link>https://hugo-toha.github.io/notes/01-csharp/01-basic/01-introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/01-basic/01-introduction/</guid><description>&lt;!-- Getting Started -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Getting Started&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>What&amp;rsquo;s CSharp?&lt;/strong>&lt;/p>
&lt;p>C# is a high-level, general-purpose programming language developed by Microsoft as part of the .NET framework. It&amp;rsquo;s an object-oriented language, meaning it uses objects to structure code and data, and is used to build a variety of applications. C# is known for its ease of learning, strong community support, and ability to produce highly performant code.&lt;/p>
&lt;p>&lt;strong>.NET SDK Instalation&lt;/strong>&lt;/p>
&lt;p>The easiest way to have the .NET SDK installed in your personal computer is to download &lt;a href="https://visualstudio.microsoft.com/" target="_blank" rel="noopener">Visual Studio&lt;/a>. You can also use other IDE, but you will need to install the &lt;a href="https://dotnet.microsoft.com/en-us/download/visual-studio-sdks" target="_blank" rel="noopener">SDK&lt;/a> manually.&lt;/p></description></item><item><title>Basic Types</title><link>https://hugo-toha.github.io/notes/01-csharp/01-basic/02-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/01-basic/02-types/</guid><description>&lt;!-- Data types -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Data_Types&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>There are two different data types in C#:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Value Types:&lt;/strong> Directly store the data. Once you assign a value, it holds that data
&lt;ul>
&lt;li>&lt;code>int&lt;/code>, &lt;code>char&lt;/code>, &lt;code>float&lt;/code> are just a few examples.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Reference Types:&lt;/strong> Store a memory address. They point to the address of the value.
&lt;ul>
&lt;li>&lt;code>string&lt;/code>, &lt;code>class&lt;/code>, &lt;code>array&lt;/code> are commonly used.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Integer data type -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Integer&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>Math operations:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> sum = &lt;span style="color:#ae81ff">7&lt;/span> + &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> difference = &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> product = &lt;span style="color:#ae81ff">7&lt;/span> * &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> quotient = &lt;span style="color:#ae81ff">7&lt;/span> / &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> modulus = &lt;span style="color:#ae81ff">7&lt;/span> % &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Sum: &amp;#34;&lt;/span> + sum); &lt;span style="color:#75715e">// Sum: 12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Difference: &amp;#34;&lt;/span> + difference); &lt;span style="color:#75715e">// Difference: 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Product: &amp;#34;&lt;/span> + product); &lt;span style="color:#75715e">// Product: 35&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Quotient: &amp;#34;&lt;/span> + quotient); &lt;span style="color:#75715e">// Quotient: 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Modulus: {7 % 5}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Modulus: 2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Order of operations&lt;/strong>&lt;/p></description></item><item><title>Methods on Arrays</title><link>https://hugo-toha.github.io/notes/01-csharp/02-advanced/02-methods-on-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/02-advanced/02-methods-on-arrays/</guid><description>&lt;!-- Sorting an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Sort&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [ &lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Sorted...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Sort(pallets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// A11, A13, B12, B14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Reverse an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Reverse&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [ &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Reversed...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Reverse(pallets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// B14, B12, A13, A11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Clear an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Clear&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [ &lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Clear(pallets, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Clearing 2 ... count: {pallets.Length}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// null, null, B12, A13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Resize an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Resize&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] pallets = [&lt;span style="color:#e6db74">&amp;#34;B14&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A11&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;B12&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A13&amp;#34;&lt;/span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Resize(&lt;span style="color:#66d9ef">ref&lt;/span> pallets, &lt;span style="color:#ae81ff">6&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Resizing 6 ... count: {pallets.Length}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pallets[&lt;span style="color:#ae81ff">4&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;C01&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pallets[&lt;span style="color:#ae81ff">5&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;C02&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> pallet &lt;span style="color:#66d9ef">in&lt;/span> pallets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;-- {pallet}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// B14, A11, B12, A13, C01, C02&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Join an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Join&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span>[] valueArray = [&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;b&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;c&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Array.Reverse(valueArray);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// string result = new string(valueArray);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> result = String.Join(&lt;span style="color:#e6db74">&amp;#34;|&amp;#34;&lt;/span>, valueArray); &lt;span style="color:#75715e">// a|b|c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(result);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Split an array -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Split&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> result = &lt;span style="color:#e6db74">&amp;#34;123|456|789&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span>[] items = result.Split(&lt;span style="color:#e6db74">&amp;#39;|&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">string&lt;/span> item &lt;span style="color:#66d9ef">in&lt;/span> items)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(item); &lt;span style="color:#75715e">// 123, 456, 789&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Data Formatting</title><link>https://hugo-toha.github.io/notes/01-csharp/02-advanced/03-data-formatting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/02-advanced/03-data-formatting/</guid><description>&lt;!-- Composite Formatting -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Composite Formatting&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> first = &lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> second = &lt;span style="color:#e6db74">&amp;#34;World&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> result = &lt;span style="color:#66d9ef">string&lt;/span>.Format(&lt;span style="color:#e6db74">&amp;#34;{0} {1}!&amp;#34;&lt;/span>, first, second);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(result); &lt;span style="color:#75715e">// Hello World!&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Formatting Currency -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Formatting Currency&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> price = &lt;span style="color:#ae81ff">123.45&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> discount = &lt;span style="color:#ae81ff">50&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Price: {price:C} (Save {discount:C})&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Price: $123.45 (Save $50.00)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Formatting Numbers -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Formatting Numbers&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> measurement = &lt;span style="color:#ae81ff">123456.78912&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Measurement: {measurement:N} units&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Measurement: 123,456.79 units&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Measurement: {measurement:N4} units&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Measurement: 123,456.7891 units&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Formatting Percentage -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Formatting Numbers&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">decimal&lt;/span> tax = .&lt;span style="color:#ae81ff">36785&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Tax rate: {tax:P2}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Tax rate: 36.79%&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Methods</title><link>https://hugo-toha.github.io/notes/01-csharp/01-basic/03-methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/01-basic/03-methods/</guid><description>&lt;!-- Stateless Method -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Stateless&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>The following code is stateless because it doesn&amp;rsquo;t require to store any state to work, you just call the static method WriteLine from Console class.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Hello World!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Stateful Method -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Stateful&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>The following code is stateful because it is required to store previous information of the state to calculate next random value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Random dice = &lt;span style="color:#66d9ef">new&lt;/span> Random();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> roll = dice.Next(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">7&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Flow Control</title><link>https://hugo-toha.github.io/notes/01-csharp/01-basic/04-flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/01-basic/04-flow-control/</guid><description>&lt;!-- Condition -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Condition&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>if-else operator&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> color = &lt;span style="color:#e6db74">&amp;#34;black&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (color == &lt;span style="color:#e6db74">&amp;#34;black&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;It&amp;#39;s black.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (color == &lt;span style="color:#e6db74">&amp;#34;white&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;It&amp;#39;s white.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;It&amp;#39;s other color.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>Conditional Operator&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> saleAmount = &lt;span style="color:#ae81ff">1001&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> discount = saleAmount &amp;gt; &lt;span style="color:#ae81ff">1000&lt;/span> ? &lt;span style="color:#ae81ff">100&lt;/span> : &lt;span style="color:#ae81ff">50&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Discount: {discount}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Switch Case -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Switch&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">string&lt;/span> fruit = &lt;span style="color:#e6db74">&amp;#34;apple&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">switch&lt;/span> (fruit)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;apple&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;App will display information for apple.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;banana&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;App will display information for banana.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;cherry&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;App will display information for cherry.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;App will not display information about any fruit.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Loop -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Loop&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>Foreach&lt;/strong>&lt;/p></description></item><item><title>Concepts</title><link>https://hugo-toha.github.io/notes/01-csharp/01-basic/05-concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/01-csharp/01-basic/05-concepts/</guid><description>&lt;!-- Code blocks and variable scopes -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Scope&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>if-else operator&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">bool&lt;/span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">value&lt;/span> = &lt;span style="color:#ae81ff">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Inside the code block: {value}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Prints value.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;Outside the code block: {value}&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// Gives error because value is declared inside the if code block.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Sub-Category</title><link>https://hugo-toha.github.io/posts/category/sub-category/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/posts/category/sub-category/_index.bn/</guid><description/></item><item><title>Top Category Sample</title><link>https://hugo-toha.github.io/posts/category/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/posts/category/_index.bn/</guid><description/></item><item><title>পোস্ট সমূহ</title><link>https://hugo-toha.github.io/posts/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/posts/_index.bn/</guid><description/></item></channel></rss>