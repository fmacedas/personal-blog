[{"categories":null,"contents":" Casting Casting truncates the value.\ndecimal myDecimal = 3.14m; Console.WriteLine($\u0026#34;decimal: {myDecimal}\u0026#34;); // decimal: 3.14 int myInt = (int)myDecimal; Console.WriteLine($\u0026#34;int: {myInt}\u0026#34;); // int: 3 To String int first = 5; int second = 7; string message = first.ToString() + second.ToString(); Console.WriteLine(message); // 57 Parse string first = \u0026#34;5\u0026#34;; string second = \u0026#34;7\u0026#34;; int sum = int.Parse(first) + int.Parse(second); Console.WriteLine(sum); // 12 Parse string value = \u0026#34;102\u0026#34;; int result = 0; if (int.TryParse(value, out result)) { Console.WriteLine($\u0026#34;Measurement: {result}\u0026#34;); } else { Console.WriteLine(\u0026#34;Unable to report the measurement.\u0026#34;); } Convert Convert rounds the value.\nstring value1 = \u0026#34;5\u0026#34;; string value2 = \u0026#34;7\u0026#34;; int result = Convert.ToInt32(value1) * Convert.ToInt32(value2); Console.WriteLine(result); // 35 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/02-advanced/01-convert-data-types/","summary":"\u003c!-- Casting type to convert --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eCasting\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003eCasting truncates the value.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edecimal\u003c/span\u003e myDecimal = \u003cspan style=\"color:#ae81ff\"\u003e3.14\u003c/span\u003em;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;decimal: {myDecimal}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// decimal: 3.14\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e myInt = (\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e)myDecimal;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;int: {myInt}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// int: 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Convert number to string --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eTo String\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e first = \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e second = \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e message = first.ToString() + second.ToString();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(message); \u003cspan style=\"color:#75715e\"\u003e// 57\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Convert string to number using Parse() --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eParse\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e first = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;5\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e second = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;7\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e sum = \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e.Parse(first) + \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e.Parse(second);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(sum); \u003cspan style=\"color:#75715e\"\u003e// 12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Convert string to number using TryParse() --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eParse\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evalue\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;102\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e result = \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e.TryParse(\u003cspan style=\"color:#66d9ef\"\u003evalue\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003eout\u003c/span\u003e result))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Measurement: {result}\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Unable to report the measurement.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Convert string to number using Convert class --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eConvert\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003eConvert rounds the value.\u003c/p\u003e","tags":null,"title":"Data Type Conversion"},{"categories":null,"contents":" Getting Started What\u0026rsquo;s CSharp?\nC# is a high-level, general-purpose programming language developed by Microsoft as part of the .NET framework. It\u0026rsquo;s an object-oriented language, meaning it uses objects to structure code and data, and is used to build a variety of applications. C# is known for its ease of learning, strong community support, and ability to produce highly performant code.\n.NET SDK Instalation\nThe easiest way to have the .NET SDK installed in your personal computer is to download Visual Studio. You can also use other IDE, but you will need to install the SDK manually.\nHello World A sample C# program is show here.\n// See https://aka.ms/new-console-template for more information Console.WriteLine(\u0026#34;Hello, World!\u0026#34;); Run the program as below:\n$ dotnet run Program.cs Variables Normal Declaration:\nstring firstName = \u0026#34;Someone\u0026#34;; char userOption = \u0026#39;A\u0026#39;; int gameScore = 123; float percentage = 12.10; double portion = 4.556 decimal particlesPerMillion = 123.4567; bool processedCustomer = true; Implicitly Typed:\nvar message = \u0026#34;Hello world!\u0026#34;; Constant const int ConstNum = 5; ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/01-basic/01-introduction/","summary":"\u003c!-- Getting Started --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eGetting Started\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eWhat\u0026rsquo;s CSharp?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eC# is a high-level, general-purpose programming language developed by Microsoft as part of the .NET framework. It\u0026rsquo;s an object-oriented language, meaning it uses objects to structure code and data, and is used to build a variety of applications. C# is known for its ease of learning, strong community support, and ability to produce highly performant code.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e.NET SDK Instalation\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe easiest way to have the .NET SDK installed in your personal computer is to download \u003ca href=\"https://visualstudio.microsoft.com/\" target=\"_blank\" rel=\"noopener\"\u003eVisual Studio\u003c/a\u003e. You can also use other IDE, but you will need to install the \u003ca href=\"https://dotnet.microsoft.com/en-us/download/visual-studio-sdks\" target=\"_blank\" rel=\"noopener\"\u003eSDK\u003c/a\u003e manually.\u003c/p\u003e","tags":null,"title":"Introduction"},{"categories":null,"contents":" Data_Types There are two different data types in C#:\nValue Types: Directly store the data. Once you assign a value, it holds that data int, char, float are just a few examples. Reference Types: Store a memory address. They point to the address of the value. string, class, array are commonly used. Integer Math operations:\nint sum = 7 + 5; int difference = 7 - 5; int product = 7 * 5; int quotient = 7 / 5; int modulus = 7 % 5; Console.WriteLine(\u0026#34;Sum: \u0026#34; + sum); // Sum: 12 Console.WriteLine(\u0026#34;Difference: \u0026#34; + difference); // Difference: 2 Console.WriteLine(\u0026#34;Product: \u0026#34; + product); // Product: 35 Console.WriteLine(\u0026#34;Quotient: \u0026#34; + quotient); // Quotient: 1 Console.WriteLine($\u0026#34;Modulus: {7 % 5}\u0026#34;); // Modulus: 2 Order of operations\nIn math, PEMDAS is an acronym that helps students remember the order of operations. The order is:\nParentheses (whatever is inside the parenthesis is performed first) Exponents Multiplication and Division (from left to right) Addition and Subtraction (from left to right) Increment and decrement\nint value = 1; value = value + 1; Console.WriteLine(\u0026#34;First increment: \u0026#34; + value); // First increment: 2 value += 1; Console.WriteLine(\u0026#34;Second increment: \u0026#34; + value); // Second increment: 3 value++; Console.WriteLine(\u0026#34;Third increment: \u0026#34; + value); // Third increment: 4 value = value - 1; Console.WriteLine(\u0026#34;First decrement: \u0026#34; + value); // First decrement: 3 value -= 1; Console.WriteLine(\u0026#34;Second decrement: \u0026#34; + value); // Second decrement: 2 value--; Console.WriteLine(\u0026#34;Third decrement: \u0026#34; + value); // Third decrement: 1 String Combine String using character escape sequences:\n// Character escape sequences Console.WriteLine(\u0026#34;Hello\\nWorld!\u0026#34;); Console.WriteLine(\u0026#34;Hello\\tWorld!\u0026#34;); Console.WriteLine(\u0026#34;Hello \\\u0026#34;World\\\u0026#34;!\u0026#34;); // Hello \u0026#34;World\u0026#34;! Console.WriteLine(\u0026#34;c:\\\\source\\\\repos\u0026#34;); // c:\\source\\repos // Verbatim string literal Console.WriteLine(@\u0026#34; c:\\source\\repos (this is where your code goes)\u0026#34;); // c:\\source\\repos // (this is where your code goes) // Unicode escape character Console.WriteLine(\u0026#34;\\u3053\\u3093\\u306B\\u3061\\u306F World!\u0026#34;); // こんにちは World! Combine String using string concatenation:\nstring firstName = \u0026#34;Bob\u0026#34;; string greeting = \u0026#34;Hello\u0026#34;; string message = greeting + \u0026#34; \u0026#34; + firstName + \u0026#34;!\u0026#34;; Console.WriteLine(message); // Hello Bob! Combine String using string interpolation:\nstring firstName = \u0026#34;Bob\u0026#34;; string greeting = \u0026#34;Hello\u0026#34;; Console.WriteLine($\u0026#34;{greeting} {firstName}!\u0026#34;); // Hello Bob! // Combine verbatim literals and string interpolation string projectName = \u0026#34;First-Project\u0026#34;; Console.WriteLine($@\u0026#34;C:\\Output\\{projectName}\\Data\u0026#34;); // C:\\Output\\First-Project\\Data Array Declaration:\nstring[] customerIds = new string[3]; string[] customerIds = [ \u0026#34;A123\u0026#34;, \u0026#34;B456\u0026#34;, \u0026#34;C789\u0026#34; ]; // Introduced in C#12 string[] customerIds = { \u0026#34;A123\u0026#34;, \u0026#34;B456\u0026#34;, \u0026#34;C789\u0026#34; }; // Older version Assigning values:\nstring[] customerIds = new string[3]; customerIds[0] = \u0026#34;C123\u0026#34;; customerIds[1] = \u0026#34;C456\u0026#34;; customerIds[2] = \u0026#34;C789\u0026#34;; Size of the array:\nstring[] customerIds = [ \u0026#34;A123\u0026#34;, \u0026#34;B456\u0026#34;, \u0026#34;C789\u0026#34; ]; Console.WriteLine($\u0026#34;There are {customerIds.Length} customers.\u0026#34;); ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/01-basic/02-types/","summary":"\u003c!-- Data types --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eData_Types\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eThere are two different data types in C#:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eValue Types:\u003c/strong\u003e Directly store the data. Once you assign a value, it holds that data\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003echar\u003c/code\u003e, \u003ccode\u003efloat\u003c/code\u003e are just a few examples.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReference Types:\u003c/strong\u003e Store a memory address. They point to the address of the value.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estring\u003c/code\u003e, \u003ccode\u003eclass\u003c/code\u003e, \u003ccode\u003earray\u003c/code\u003e are commonly used.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Integer data type --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eInteger\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eMath operations:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e sum = \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e + \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e difference = \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e - \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e product = \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e * \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e quotient = \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e / \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e modulus = \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e % \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Sum: \u0026#34;\u003c/span\u003e + sum); \u003cspan style=\"color:#75715e\"\u003e// Sum: 12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Difference: \u0026#34;\u003c/span\u003e + difference); \u003cspan style=\"color:#75715e\"\u003e// Difference: 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Product: \u0026#34;\u003c/span\u003e + product); \u003cspan style=\"color:#75715e\"\u003e// Product: 35\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Quotient: \u0026#34;\u003c/span\u003e + quotient); \u003cspan style=\"color:#75715e\"\u003e// Quotient: 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Modulus: {7 % 5}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Modulus: 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eOrder of operations\u003c/strong\u003e\u003c/p\u003e","tags":null,"title":"Basic Types"},{"categories":null,"contents":" Sort string[] pallets = [ \u0026#34;B14\u0026#34;, \u0026#34;A11\u0026#34;, \u0026#34;B12\u0026#34;, \u0026#34;A13\u0026#34; ]; Console.WriteLine(\u0026#34;Sorted...\u0026#34;); Array.Sort(pallets); foreach (var pallet in pallets) { Console.WriteLine($\u0026#34;-- {pallet}\u0026#34;); // A11, A13, B12, B14 } Reverse string[] pallets = [ \u0026#34;A11\u0026#34;, \u0026#34;A13\u0026#34;, \u0026#34;B12\u0026#34;, \u0026#34;B14\u0026#34; ]; Console.WriteLine(\u0026#34;Reversed...\u0026#34;); Array.Reverse(pallets); foreach (var pallet in pallets) { Console.WriteLine($\u0026#34;-- {pallet}\u0026#34;); // B14, B12, A13, A11 } Clear string[] pallets = [ \u0026#34;B14\u0026#34;, \u0026#34;A11\u0026#34;, \u0026#34;B12\u0026#34;, \u0026#34;A13\u0026#34; ]; Console.WriteLine(\u0026#34;\u0026#34;); Array.Clear(pallets, 0, 2); Console.WriteLine($\u0026#34;Clearing 2 ... count: {pallets.Length}\u0026#34;); foreach (var pallet in pallets) { Console.WriteLine($\u0026#34;-- {pallet}\u0026#34;); // null, null, B12, A13 } Resize string[] pallets = [\u0026#34;B14\u0026#34;, \u0026#34;A11\u0026#34;, \u0026#34;B12\u0026#34;, \u0026#34;A13\u0026#34; ]; Console.WriteLine(\u0026#34;\u0026#34;); Array.Resize(ref pallets, 6); Console.WriteLine($\u0026#34;Resizing 6 ... count: {pallets.Length}\u0026#34;); pallets[4] = \u0026#34;C01\u0026#34;; pallets[5] = \u0026#34;C02\u0026#34;; foreach (var pallet in pallets) { Console.WriteLine($\u0026#34;-- {pallet}\u0026#34;); // B14, A11, B12, A13, C01, C02 } Join char[] valueArray = [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;] Array.Reverse(valueArray); // string result = new string(valueArray); string result = String.Join(\u0026#34;|\u0026#34;, valueArray); // a|b|c Console.WriteLine(result); Split string result = \u0026#34;123|456|789\u0026#34;; string[] items = result.Split(\u0026#39;|\u0026#39;); foreach (string item in items) { Console.WriteLine(item); // 123, 456, 789 } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/02-advanced/02-methods-on-arrays/","summary":"\u003c!-- Sorting an array --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eSort\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e[] pallets = [ \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B14\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A11\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B12\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A13\u0026#34;\u003c/span\u003e ];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Sorted...\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eArray.Sort(pallets);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eforeach\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e pallet \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e pallets)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;-- {pallet}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// A11, A13, B12, B14\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Reverse an array --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eReverse\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e[] pallets = [ \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A11\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A13\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B12\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B14\u0026#34;\u003c/span\u003e ];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Reversed...\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eArray.Reverse(pallets);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eforeach\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e pallet \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e pallets)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;-- {pallet}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// B14, B12, A13, A11\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Clear an array --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eClear\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e[] pallets = [ \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B14\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A11\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B12\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A13\u0026#34;\u003c/span\u003e ];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eArray.Clear(pallets, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Clearing 2 ... count: {pallets.Length}\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eforeach\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e pallet \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e pallets)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;-- {pallet}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// null, null, B12, A13\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Resize an array --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eResize\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e[] pallets =  [\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B14\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A11\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;B12\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;A13\u0026#34;\u003c/span\u003e ];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eArray.Resize(\u003cspan style=\"color:#66d9ef\"\u003eref\u003c/span\u003e pallets, \u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Resizing 6 ... count: {pallets.Length}\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epallets[\u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e] = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;C01\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epallets[\u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e] = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;C02\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eforeach\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e pallet \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e pallets)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;-- {pallet}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// B14, A11, B12, A13, C01, C02\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Join an array --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eJoin\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003echar\u003c/span\u003e[] valueArray = [\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;b\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eArray.Reverse(valueArray);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// string result = new string(valueArray);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e result = String.Join(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;|\u0026#34;\u003c/span\u003e, valueArray); \u003cspan style=\"color:#75715e\"\u003e// a|b|c\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(result);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Split an array --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eSplit\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e result = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;123|456|789\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e[] items = result.Split(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;|\u0026#39;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eforeach\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e item \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e items)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   Console.WriteLine(item); \u003cspan style=\"color:#75715e\"\u003e// 123, 456, 789\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Methods on Arrays"},{"categories":null,"contents":"\rComposite Formatting string first = \u0026#34;Hello\u0026#34;; string second = \u0026#34;World\u0026#34;; string result = string.Format(\u0026#34;{0} {1}!\u0026#34;, first, second); Console.WriteLine(result); // Hello World! Formatting Currency decimal price = 123.45m; int discount = 50; Console.WriteLine($\u0026#34;Price: {price:C} (Save {discount:C})\u0026#34;); // Price: $123.45 (Save $50.00) Formatting Numbers decimal measurement = 123456.78912m; Console.WriteLine($\u0026#34;Measurement: {measurement:N} units\u0026#34;); // Measurement: 123,456.79 units Console.WriteLine($\u0026#34;Measurement: {measurement:N4} units\u0026#34;); // Measurement: 123,456.7891 units Formatting Numbers decimal tax = .36785m; Console.WriteLine($\u0026#34;Tax rate: {tax:P2}\u0026#34;); // Tax rate: 36.79% ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/02-advanced/03-data-formatting/","summary":"\u003c!-- Composite Formatting --\u003e\r\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eComposite Formatting\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e first = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e second = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;World\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e result = \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e.Format(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{0} {1}!\u0026#34;\u003c/span\u003e, first, second);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(result); \u003cspan style=\"color:#75715e\"\u003e// Hello World!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Formatting Currency --\u003e\r\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eFormatting Currency\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edecimal\u003c/span\u003e price = \u003cspan style=\"color:#ae81ff\"\u003e123.45\u003c/span\u003em;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e discount = \u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Price: {price:C} (Save {discount:C})\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Price: $123.45 (Save $50.00)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Formatting Numbers --\u003e\r\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eFormatting Numbers\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edecimal\u003c/span\u003e measurement = \u003cspan style=\"color:#ae81ff\"\u003e123456.78912\u003c/span\u003em;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Measurement: {measurement:N} units\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Measurement: 123,456.79 units\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Measurement: {measurement:N4} units\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Measurement: 123,456.7891 units\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Formatting Percentage --\u003e\r\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eFormatting Numbers\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edecimal\u003c/span\u003e tax = .\u003cspan style=\"color:#ae81ff\"\u003e36785\u003c/span\u003em;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Tax rate: {tax:P2}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Tax rate: 36.79%\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Data Formatting"},{"categories":null,"contents":" Stateless The following code is stateless because it doesn\u0026rsquo;t require to store any state to work, you just call the static method WriteLine from Console class.\nConsole.WriteLine(\u0026#34;Hello World!\u0026#34;); Stateful The following code is stateful because it is required to store previous information of the state to calculate next random value.\nRandom dice = new Random(); int roll = dice.Next(1, 7); ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/01-basic/03-methods/","summary":"\u003c!-- Stateless Method --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eStateless\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003eThe following code is stateless because it doesn\u0026rsquo;t require to store any state to work, you just call the static method WriteLine from Console class.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Stateful Method --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eStateful\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003eThe following code is stateful because it is required to store previous information of the state to calculate next random value.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eRandom dice = \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Random();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e roll = dice.Next(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Methods"},{"categories":null,"contents":" Condition if-else operator\nstring color = \u0026#34;black\u0026#34;; if (color == \u0026#34;black\u0026#34;) { Console.WriteLine(\u0026#34;It\u0026#39;s black.\u0026#34;); } else if (color == \u0026#34;white\u0026#34;) { Console.WriteLine(\u0026#34;It\u0026#39;s white.\u0026#34;); } else { Console.WriteLine(\u0026#34;It\u0026#39;s other color.\u0026#34;); } Conditional Operator\nint saleAmount = 1001; int discount = saleAmount \u0026gt; 1000 ? 100 : 50; Console.WriteLine($\u0026#34;Discount: {discount}\u0026#34;); Switch string fruit = \u0026#34;apple\u0026#34;; switch (fruit) { case \u0026#34;apple\u0026#34;: Console.WriteLine($\u0026#34;App will display information for apple.\u0026#34;); break; case \u0026#34;banana\u0026#34;: Console.WriteLine($\u0026#34;App will display information for banana.\u0026#34;); break; case \u0026#34;cherry\u0026#34;: Console.WriteLine($\u0026#34;App will display information for cherry.\u0026#34;); break; default: Console.WriteLine($\u0026#34;App will not display information about any fruit.\u0026#34;); break; } Loop Foreach\nstring[] names = { \u0026#34;Rowena\u0026#34;, \u0026#34;Robin\u0026#34;, \u0026#34;Bao\u0026#34; }; foreach (string name in names) { Console.WriteLine(name); // \u0026#34;Rowena\u0026#34;, \u0026#34;Robin\u0026#34;, \u0026#34;Bao\u0026#34; } For\nfor (int i = 0; i \u0026lt; 10; i++) { if (i \u0026gt; 5) { break; } Console.WriteLine(i); // 1, 2, 3, 4, 5 } Do-While\nRandom random = new Random(); int current = 0; do { current = random.Next(1, 11); if (current \u0026gt;= 8) { continue; } Console.WriteLine(current); } while (current != 7); While\nRandom random = new Random(); int current = random.Next(1, 11); while (current \u0026gt;= 3) { Console.WriteLine(current); current = random.Next(1, 11); } Console.WriteLine($\u0026#34;Last number: {current}\u0026#34;); ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/01-basic/04-flow-control/","summary":"\u003c!-- Condition --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eCondition\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eif-else operator\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e color = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;black\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (color == \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;black\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;It\u0026#39;s black.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (color == \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;white\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;It\u0026#39;s white.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;It\u0026#39;s other color.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eConditional Operator\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e saleAmount = \u003cspan style=\"color:#ae81ff\"\u003e1001\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e discount = saleAmount \u0026gt; \u003cspan style=\"color:#ae81ff\"\u003e1000\u003c/span\u003e ? \u003cspan style=\"color:#ae81ff\"\u003e100\u003c/span\u003e : \u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Discount: {discount}\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Switch Case --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eSwitch\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e fruit = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eswitch\u003c/span\u003e (fruit)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;App will display information for apple.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ebreak\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;banana\u0026#34;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;App will display information for banana.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ebreak\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;cherry\u0026#34;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;App will display information for cherry.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ebreak\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003edefault\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;App will not display information about any fruit.\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ebreak\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Loop --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eLoop\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eForeach\u003c/strong\u003e\u003c/p\u003e","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Scope if-else operator\nbool flag = true; if (flag) { int value = 10; Console.WriteLine($\u0026#34;Inside the code block: {value}\u0026#34;); // Prints value. } Console.WriteLine($\u0026#34;Outside the code block: {value}\u0026#34;); // Gives error because value is declared inside the if code block. ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/notes/01-csharp/01-basic/05-concepts/","summary":"\u003c!-- Code blocks and variable scopes --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eScope\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eif-else operator\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-csharp\" data-lang=\"csharp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ebool\u003c/span\u003e flag = \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (flag)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evalue\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  Console.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Inside the code block: {value}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Prints value.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eConsole.WriteLine(\u003cspan style=\"color:#e6db74\"\u003e$\u0026#34;Outside the code block: {value}\u0026#34;\u003c/span\u003e); \u003cspan style=\"color:#75715e\"\u003e// Gives error because value is declared inside the if code block.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Concepts"},{"categories":["Basic"],"contents":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","date":"June 8, 2020","hero":"/posts/introduction/hero.svg","permalink":"https://hugo-toha.github.io/posts/introduction/","summary":"\u003cp\u003eGreeting! This is an introduction post. This post tests the followings:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHero image is in the same directory as the post.\u003c/li\u003e\n\u003cli\u003eThis post should be at top of the sidebar.\u003c/li\u003e\n\u003cli\u003ePost author should be the same as specified in \u003ccode\u003eauthor.yaml\u003c/code\u003e file.\u003c/li\u003e\n\u003c/ul\u003e","tags":["Basic","Multi-lingual"],"title":"Introduction"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Inline Markdown In Table italics bold strikethrough code Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Rendering Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEmoji Rendering 🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/posts/markdown-sample/hero.svg","permalink":"https://hugo-toha.github.io/posts/markdown-sample/","summary":"\u003cp\u003eThis is a sample post intended to test the followings:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA different post author.\u003c/li\u003e\n\u003cli\u003eTable of contents.\u003c/li\u003e\n\u003cli\u003eMarkdown content rendering.\u003c/li\u003e\n\u003cli\u003eMath rendering.\u003c/li\u003e\n\u003cli\u003eEmoji rendering.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch1 id=\"markdown-syntax-rendering\"\u003eMarkdown Syntax Rendering\u003c/h1\u003e\n\u003ch2 id=\"headings\"\u003eHeadings\u003c/h2\u003e\n\u003cp\u003eThe following HTML \u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e—\u003ccode\u003e\u0026lt;h6\u0026gt;\u003c/code\u003e elements represent six levels of section headings. \u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e is the highest section level while \u003ccode\u003e\u0026lt;h6\u0026gt;\u003c/code\u003e is the lowest.\u003c/p\u003e\n\u003ch1 id=\"h1\"\u003eH1\u003c/h1\u003e\n\u003ch2 id=\"h2\"\u003eH2\u003c/h2\u003e\n\u003ch3 id=\"h3\"\u003eH3\u003c/h3\u003e\n\u003ch4 id=\"h4\"\u003eH4\u003c/h4\u003e\n\u003ch5 id=\"h5\"\u003eH5\u003c/h5\u003e\n\u003ch6 id=\"h6\"\u003eH6\u003c/h6\u003e\n\u003ch2 id=\"paragraph\"\u003eParagraph\u003c/h2\u003e\n\u003cp\u003eXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\u003c/p\u003e","tags":null,"title":"Markdown Samples"},{"categories":["Basic"],"contents":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","date":"June 8, 2020","hero":"/posts/category/sub-category/rich-content/images/forest.jpg","permalink":"https://hugo-toha.github.io/posts/category/sub-category/rich-content/","summary":"\u003cp\u003eThis sample post tests the followings:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCategory, sub-category nesting in the sidebar.\u003c/li\u003e\n\u003cli\u003eHero image and other images are in \u003ccode\u003eimages\u003c/code\u003e folder inside this post directory.\u003c/li\u003e\n\u003cli\u003eDifferent media rendering like image, tweet, YouTube video, Vimeo video etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"image-sample\"\u003eImage Sample\u003c/h3\u003e\n\u003cimg src=\"/posts/category/sub-category/rich-content/images/forest.jpg\"\n    \n        alt=\"Forest\"\n    \n    \n    \n    \n    \n        class=\"center\"\n    \n\u003e\n\n\u003cdiv style=\"margin-top: rem;\"\u003e\u003c/div\u003e\n\u003ch3 id=\"tweet-sample\"\u003eTweet Sample\u003c/h3\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"en\" dir=\"ltr\"\u003eOwl bet you\u0026#39;ll lose this staring contest 🦉 \u003ca href=\"https://t.co/eJh4f2zncC\"\u003epic.twitter.com/eJh4f2zncC\u003c/a\u003e\u003c/p\u003e\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) \u003ca href=\"https://twitter.com/sandiegozoo/status/1453110110599868418?ref_src=twsrc%5Etfw\"\u003eOctober 26, 2021\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\n\u003cdiv style=\"margin-top: rem;\"\u003e\u003c/div\u003e\n\u003ch3 id=\"youtube-video-sample\"\u003eYouTube Video Sample\u003c/h3\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/ZJthWmvUzzc?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cdiv style=\"margin-top: rem;\"\u003e\u003c/div\u003e\n\u003ch3 id=\"vimeo-video-sample\"\u003eVimeo Video Sample\u003c/h3\u003e\n\n      \u003cdiv\n          style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n        \u003ciframe\n          src=\"https://player.vimeo.com/video/48912912?dnt=0\"\n            style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allow=\"fullscreen\"\u003e\n        \u003c/iframe\u003e\n      \u003c/div\u003e","tags":["Markdown","Content Organization","Multi-lingual"],"title":"Rich Content"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute. A sample image with height and width attributes. A center aligned image with height and width attributes. A image with float attribute. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nSplit This theme support splitting the page into as many columns as you wish.\nTwo column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nThree column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nMiddle Column Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nVertical Space Give vertical space between two lines.\nThis is line one. This is line two. It should have 4rem vertical space with previous line.\nVideo Video by Rahul Sharma from Pexels.\nMermaid Here, are few example of mermaid shortcode.\nGraph:\ngraph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Sequence Diagram:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! Gantt diagram:\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d Class Diagram:\nclassDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label Git Graph:\ngitGraph commit id: \"ZERO\" branch develop commit id:\"A\" checkout main commit id:\"ONE\" checkout develop commit id:\"B\" checkout main commit id:\"TWO\" cherry-pick id:\"A\" commit id:\"THREE\" checkout develop commit id:\"C\" ER Diagram:\nerDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Gist Embeded PDF Page: / Previous Next ","date":"June 8, 2020","hero":"/posts/shortcodes/boat.jpg","permalink":"https://hugo-toha.github.io/posts/shortcodes/","summary":"\u003cp\u003eThis is a sample post intended to test the followings:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefault hero image.\u003c/li\u003e\n\u003cli\u003eDifferent shortcodes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"alert\"\u003eAlert\u003c/h2\u003e\n\u003cp\u003eThe following alerts are available in this theme.\u003c/p\u003e\n\n\n\n    \n\n\n\u003cdiv class=\"alert success\"\u003e\n    \u003cspan\u003e\u003ci data-feather=\"check-circle\"\u003e\u003c/i\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cstrong\u003eThis is sample alert with \u003ccode\u003etype=\u0026quot;success\u0026quot;\u003c/code\u003e.\u003c/strong\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\n\n\n    \n\n\n\u003cdiv class=\"alert danger\"\u003e\n    \u003cspan\u003e\u003ci data-feather=\"alert-octagon\"\u003e\u003c/i\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cstrong\u003eThis is sample alert with \u003ccode\u003etype=\u0026quot;danger\u0026quot;\u003c/code\u003e.\u003c/strong\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\n\n\n    \n\n\n\u003cdiv class=\"alert warning\"\u003e\n    \u003cspan\u003e\u003ci data-feather=\"alert-triangle\"\u003e\u003c/i\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cstrong\u003eThis is sample alert with \u003ccode\u003etype=\u0026quot;warning\u0026quot;\u003c/code\u003e.\u003c/strong\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\n\n\n    \n\n\n\u003cdiv class=\"alert info\"\u003e\n    \u003cspan\u003e\u003ci data-feather=\"info\"\u003e\u003c/i\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cstrong\u003eThis is sample alert with \u003ccode\u003etype=\u0026quot;info\u0026quot;\u003c/code\u003e.\u003c/strong\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"alert dark\"\u003e\n    \u003cspan\u003e\u003ci data-feather=\"alert-circle\"\u003e\u003c/i\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cstrong\u003eThis is sample alert with \u003ccode\u003etype=\u0026quot;dark\u0026quot;\u003c/code\u003e.\u003c/strong\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"alert primary\"\u003e\n    \u003cspan\u003e\u003ci data-feather=\"alert-circle\"\u003e\u003c/i\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cstrong\u003eThis is sample alert with \u003ccode\u003etype=\u0026quot;primary\u0026quot;\u003c/code\u003e.\u003c/strong\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"alert secondary\"\u003e\n    \u003cspan\u003e\u003ci data-feather=\"alert-circle\"\u003e\u003c/i\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cstrong\u003eThis is sample alert with \u003ccode\u003etype=\u0026quot;secondary\u0026quot;\u003c/code\u003e.\u003c/strong\u003e\u003c/span\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"image\"\u003eImage\u003c/h2\u003e\n\u003ch4 id=\"a-sample-image-without-any-attribute\"\u003eA sample image without any attribute.\u003c/h4\u003e\n\u003cimg src=\"/posts/shortcodes/boat.jpg\"\n    \n        alt=\"A boat at the sea\"\n    \n    \n    \n    \n    \n\u003e\n\n\u003cdiv style=\"margin-top: 3rem;\"\u003e\u003c/div\u003e\n\u003ch4 id=\"a-sample-image-with-height-and-width-attributes\"\u003eA sample image with \u003ccode\u003eheight\u003c/code\u003e and \u003ccode\u003ewidth\u003c/code\u003e attributes.\u003c/h4\u003e\n\u003cimg src=\"/posts/shortcodes/boat.jpg\"\n    \n        alt=\"A boat at the sea\"\n    \n    \n        width=\"600\"\n    \n    \n        height=\"400\"\n    \n    \n    \n\u003e\n\n\u003cdiv style=\"margin-top: 3rem;\"\u003e\u003c/div\u003e\n\u003ch4 id=\"a-center-aligned-image-with-height-and-width-attributes\"\u003eA center aligned image with \u003ccode\u003eheight\u003c/code\u003e and \u003ccode\u003ewidth\u003c/code\u003e attributes.\u003c/h4\u003e\n\u003cimg src=\"/posts/shortcodes/boat.jpg\"\n    \n        alt=\"A boat at the sea\"\n    \n    \n        width=\"600\"\n    \n    \n        height=\"400\"\n    \n    \n    \n        class=\"center\"\n    \n\u003e\n\n\u003cdiv style=\"margin-top: 3rem;\"\u003e\u003c/div\u003e\n\u003ch4 id=\"a-image-with-float-attribute\"\u003eA image with \u003ccode\u003efloat\u003c/code\u003e attribute.\u003c/h4\u003e\n\u003cimg src=\"/posts/shortcodes/boat.jpg\"\n    \n        alt=\"A boat at the sea\"\n    \n    \n        width=\"500\"\n    \n    \n        height=\"200\"\n    \n    \n        style=\"float: right;\"\n    \n    \n\u003e\n\n\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\u003c/p\u003e","tags":null,"title":"Shortcodes Samples"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/category/sub-category/_index.bn/","summary":"","tags":null,"title":"Sub-Category"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/category/_index.bn/","summary":"","tags":null,"title":"Top Category Sample"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/_index.bn/","summary":"","tags":null,"title":"পোস্ট সমূহ"}]